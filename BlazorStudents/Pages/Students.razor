@page "/students"
@inject HttpClient Http

<PageTitle>Students</PageTitle>

<h1>Students</h1>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid Items="@students" Pagination="@pagination">
        <PropertyColumn Property="@(_=> _.Id)" Sortable="true" />
        <TemplateColumn Title="Name" SortBy="@sortByName">
            <div class="flex items-center">
                @context.FirstName @context.LastName
            </div>
        </TemplateColumn>
        <PropertyColumn Property="@(_=> _.School)" Sortable="true" />
    </QuickGrid>
    @* <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>School</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in students)
            {
                <tr>
                    <td>@item.StudentId</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.School</td>
                    <td>
                        <a class="btn btn-success btn-sm" href="/update/@item.StudentId">edit</a>
                    </td>
                    <td>
                        <a class="btn btn-danger btn-sm" href="/delete/@item.StudentId">del</a>
                    </td> 

                </tr>
            }
        </tbody>
    </table> *@
}

@code {
    private Student[]? students;
    private PaginationState pagination = new PaginationState{ ItemsPerPage = 10};
    IQueryable<Student> students = Student.GetStudents();

    GridSort<Student> sortByName = GridSort<Student>.ByAscending(_ => _.FirstName)
                                                 .ThenAscending(_ => _.LastName);

    protected override async Task OnInitializedAsync()
    {
        students = await Http.GetFromJsonAsync<Student[]>($"{Constants.BASE_URL}api/students");
    }

    public class Student
    {
        public int StudentId { get; set; }

        public string? FirstName { get; set; }

        public string? LastName { get; set; }

        public string? School { get; set; }
    }
}
